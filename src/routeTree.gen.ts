/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as GuestRouteRouteImport } from './routes/_guest/route'
import { Route as AppRouteRouteImport } from './routes/_app/route'
import { Route as GuestIndexRouteImport } from './routes/_guest/index'
import { Route as GuestSetupAccountRouteImport } from './routes/_guest/setup-account'
import { Route as GuestLogoutRouteImport } from './routes/_guest/logout'
import { Route as AppDashboardRouteImport } from './routes/_app/dashboard'
import { Route as AppAccountRouteImport } from './routes/_app/account'
import { Route as AppServicesIndexRouteImport } from './routes/_app/services/index'
import { Route as AppInvoicesIndexRouteImport } from './routes/_app/invoices/index'
import { Route as AppClientsIndexRouteImport } from './routes/_app/clients/index'
import { Route as ApiAuthCallbackRouteImport } from './routes/api/auth/callback'
import { Route as AppInvoicesNewIndexRouteImport } from './routes/_app/invoices/new/index'

const GuestRouteRoute = GuestRouteRouteImport.update({
  id: '/_guest',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRouteRoute = AppRouteRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const GuestIndexRoute = GuestIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => GuestRouteRoute,
} as any)
const GuestSetupAccountRoute = GuestSetupAccountRouteImport.update({
  id: '/setup-account',
  path: '/setup-account',
  getParentRoute: () => GuestRouteRoute,
} as any)
const GuestLogoutRoute = GuestLogoutRouteImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => GuestRouteRoute,
} as any)
const AppDashboardRoute = AppDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppAccountRoute = AppAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppServicesIndexRoute = AppServicesIndexRouteImport.update({
  id: '/services/',
  path: '/services/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppInvoicesIndexRoute = AppInvoicesIndexRouteImport.update({
  id: '/invoices/',
  path: '/invoices/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppClientsIndexRoute = AppClientsIndexRouteImport.update({
  id: '/clients/',
  path: '/clients/',
  getParentRoute: () => AppRouteRoute,
} as any)
const ApiAuthCallbackRoute = ApiAuthCallbackRouteImport.update({
  id: '/api/auth/callback',
  path: '/api/auth/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const AppInvoicesNewIndexRoute = AppInvoicesNewIndexRouteImport.update({
  id: '/invoices/new/',
  path: '/invoices/new/',
  getParentRoute: () => AppRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/account': typeof AppAccountRoute
  '/dashboard': typeof AppDashboardRoute
  '/logout': typeof GuestLogoutRoute
  '/setup-account': typeof GuestSetupAccountRoute
  '/': typeof GuestIndexRoute
  '/api/auth/callback': typeof ApiAuthCallbackRoute
  '/clients': typeof AppClientsIndexRoute
  '/invoices': typeof AppInvoicesIndexRoute
  '/services': typeof AppServicesIndexRoute
  '/invoices/new': typeof AppInvoicesNewIndexRoute
}
export interface FileRoutesByTo {
  '/account': typeof AppAccountRoute
  '/dashboard': typeof AppDashboardRoute
  '/logout': typeof GuestLogoutRoute
  '/setup-account': typeof GuestSetupAccountRoute
  '/': typeof GuestIndexRoute
  '/api/auth/callback': typeof ApiAuthCallbackRoute
  '/clients': typeof AppClientsIndexRoute
  '/invoices': typeof AppInvoicesIndexRoute
  '/services': typeof AppServicesIndexRoute
  '/invoices/new': typeof AppInvoicesNewIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteRouteWithChildren
  '/_guest': typeof GuestRouteRouteWithChildren
  '/_app/account': typeof AppAccountRoute
  '/_app/dashboard': typeof AppDashboardRoute
  '/_guest/logout': typeof GuestLogoutRoute
  '/_guest/setup-account': typeof GuestSetupAccountRoute
  '/_guest/': typeof GuestIndexRoute
  '/api/auth/callback': typeof ApiAuthCallbackRoute
  '/_app/clients/': typeof AppClientsIndexRoute
  '/_app/invoices/': typeof AppInvoicesIndexRoute
  '/_app/services/': typeof AppServicesIndexRoute
  '/_app/invoices/new/': typeof AppInvoicesNewIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/account'
    | '/dashboard'
    | '/logout'
    | '/setup-account'
    | '/'
    | '/api/auth/callback'
    | '/clients'
    | '/invoices'
    | '/services'
    | '/invoices/new'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/account'
    | '/dashboard'
    | '/logout'
    | '/setup-account'
    | '/'
    | '/api/auth/callback'
    | '/clients'
    | '/invoices'
    | '/services'
    | '/invoices/new'
  id:
    | '__root__'
    | '/_app'
    | '/_guest'
    | '/_app/account'
    | '/_app/dashboard'
    | '/_guest/logout'
    | '/_guest/setup-account'
    | '/_guest/'
    | '/api/auth/callback'
    | '/_app/clients/'
    | '/_app/invoices/'
    | '/_app/services/'
    | '/_app/invoices/new/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
  GuestRouteRoute: typeof GuestRouteRouteWithChildren
  ApiAuthCallbackRoute: typeof ApiAuthCallbackRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_guest': {
      id: '/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_guest/': {
      id: '/_guest/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof GuestIndexRouteImport
      parentRoute: typeof GuestRouteRoute
    }
    '/_guest/setup-account': {
      id: '/_guest/setup-account'
      path: '/setup-account'
      fullPath: '/setup-account'
      preLoaderRoute: typeof GuestSetupAccountRouteImport
      parentRoute: typeof GuestRouteRoute
    }
    '/_guest/logout': {
      id: '/_guest/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof GuestLogoutRouteImport
      parentRoute: typeof GuestRouteRoute
    }
    '/_app/dashboard': {
      id: '/_app/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AppDashboardRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/account': {
      id: '/_app/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AppAccountRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/services/': {
      id: '/_app/services/'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof AppServicesIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/invoices/': {
      id: '/_app/invoices/'
      path: '/invoices'
      fullPath: '/invoices'
      preLoaderRoute: typeof AppInvoicesIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/clients/': {
      id: '/_app/clients/'
      path: '/clients'
      fullPath: '/clients'
      preLoaderRoute: typeof AppClientsIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/api/auth/callback': {
      id: '/api/auth/callback'
      path: '/api/auth/callback'
      fullPath: '/api/auth/callback'
      preLoaderRoute: typeof ApiAuthCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/invoices/new/': {
      id: '/_app/invoices/new/'
      path: '/invoices/new'
      fullPath: '/invoices/new'
      preLoaderRoute: typeof AppInvoicesNewIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
  }
}

interface AppRouteRouteChildren {
  AppAccountRoute: typeof AppAccountRoute
  AppDashboardRoute: typeof AppDashboardRoute
  AppClientsIndexRoute: typeof AppClientsIndexRoute
  AppInvoicesIndexRoute: typeof AppInvoicesIndexRoute
  AppServicesIndexRoute: typeof AppServicesIndexRoute
  AppInvoicesNewIndexRoute: typeof AppInvoicesNewIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppAccountRoute: AppAccountRoute,
  AppDashboardRoute: AppDashboardRoute,
  AppClientsIndexRoute: AppClientsIndexRoute,
  AppInvoicesIndexRoute: AppInvoicesIndexRoute,
  AppServicesIndexRoute: AppServicesIndexRoute,
  AppInvoicesNewIndexRoute: AppInvoicesNewIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

interface GuestRouteRouteChildren {
  GuestLogoutRoute: typeof GuestLogoutRoute
  GuestSetupAccountRoute: typeof GuestSetupAccountRoute
  GuestIndexRoute: typeof GuestIndexRoute
}

const GuestRouteRouteChildren: GuestRouteRouteChildren = {
  GuestLogoutRoute: GuestLogoutRoute,
  GuestSetupAccountRoute: GuestSetupAccountRoute,
  GuestIndexRoute: GuestIndexRoute,
}

const GuestRouteRouteWithChildren = GuestRouteRoute._addFileChildren(
  GuestRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
  GuestRouteRoute: GuestRouteRouteWithChildren,
  ApiAuthCallbackRoute: ApiAuthCallbackRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
